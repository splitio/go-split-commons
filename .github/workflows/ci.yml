name: ci
on:
  push:
    branches-ignore:
      - none
  pull_request:
    branches-ignore:
      - none

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go version
        uses: actions/setup-go@v4
        with:
          go-version: '1.18.0'

      - name: Go mod
        run: go mod tidy

      - name: Execute tests
        run: go test -coverprofile=coverage.out -count=1 -race ./...

      - name: SonarQube Scan (Push)
        if: ${{ github.event_name == 'push' }}
        uses: SonarSource/sonarcloud-github-action@v2.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }}

      - name: SonarQube Scan (Pull Request)
        if: ${{ github.event_name == 'pull_request' }}
        uses: SonarSource/sonarcloud-github-action@v2.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }}
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }}
            -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }}
            -Dsonar.pullrequest.base=${{ github.event.pull_request.base.ref }}
